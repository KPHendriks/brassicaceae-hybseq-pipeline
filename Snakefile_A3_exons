configfile: "./envs/config_exons.yaml"
SAMPLES = "S0301 S0377 SRR8528376 SRR8528399".split()

# variables for rule all:
mafft_variables = []
make_exon_consensus = []
calc_called_exons = []
calc_id_contigs = []
for sample in SAMPLES:
    calc_id_contigs.append("results/A06_identified_contigs_blat/{sample}/stats/identified_contigs.txt".format(sample=sample))
    exons = config[sample]
    if not exons:
        print("not a single exon has been identified in: " + sample)
    elif exons:
        for exon in exons:
            mafft_variables.append("results/A08_aligned_exons/{sample}/{exon}.fasta".format(sample=sample, exon=exon))
            make_exon_consensus.append("results/A09_consensus_exons/{sample}/{exon}.fasta".format(sample=sample, exon=exon))
            calc_called_exons.append("results/A09_consensus_exons/{sample}/called_exons.txt".format(sample=sample))

rule all:
    input:
        mafft_variables,
        make_exon_consensus,
        calc_called_exons,
        calc_id_contigs

rule MAFFT_assembly:
    input:
        "results/A07_mapped_exons/{sample}/{exon}.fasta"
    output:
        "results/A08_aligned_exons/{sample}/{exon}.fasta"
    shell:
        "mafft "
        "--maxiterate 1000 "
        "--oldgenafpair "
        "{input} > {output}"

rule make_exon_consensus:
    input:
        script = "src/make_exon_consensus.py",
        file = "results/A08_aligned_exons/{sample}/{exon}.fasta"
    output:
        "results/A09_consensus_exons/{sample}/{exon}.fasta"
    params:
         "{sample}"
    shell:
        "python {input.script} {params}"

rule calculate_called_exons:
    input:
        dir = "results/A09_consensus_exons/{sample}/"
    output:
        file = "results/A09_consensus_exons/{sample}/called_exons.txt"
    shell:
        "echo $(ls {input.dir} | wc -l) - 1 | bc > {output.file}"

rule calc_identified_contigs:
    input:
         file = "results/A06_identified_contigs_blat/{sample}/stats/highest_hits_filtered.txt"
    output:
         file = "results/A06_identified_contigs_blat/{sample}/stats/identified_contigs.txt"
    shell:
        "echo $(cat {input.file} | wc -l) - 1 | bc > {output.file}"


'''
rule merge_exon_seqs:
    input:
        script = "src/merge_exon_seqs.py",
        file = "results/A09_consensus_exons/"
    output:
        "results/A10_all_samples_exons/"
    shell:
         "python {input.script}"
'''
